<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
  
<configuration>

	<!-- settings : mybatis 구동시 선언할 설정들을 작성하는 영역 -->
	<!-- value의 NULL은 반드시 대문자 -->
	<!-- 만약에 null로 데이터가 전달되었다면 빈칸이 아닌 null로 인식하라는 뜻 -->
	<settings>
		<setting name="jdbcTypeForNull" value="NULL"/>
	</settings>
	
	<!-- typeAliases : servlet, bean클래스들의 풀클래스명을 단순한 클래스명 별칭으로 등록하여 사용할 수 있게해줌 -->
	<typeAliases>
		<typeAlias type="com.study.mybatis.member.vo.Member" alias="Member"/>
	</typeAliases>
	
	<!-- environments : mybatis에서연동할 DB정보들을 등록하는 영역 -->
	<!-- type 대문자로 써야됨 -->
	<environments default="development">
		<environment id="development">
			<!--
				 *transactionManager 
				 - JDBC	: 트랜잭션을 내가 직접 관리하겠다(수동 commit)
				 - MANAGED : 트랜잭션에 대한 어떠한 영향도 행사하지않겠다(자동 commit)
			 -->
			<transactionManager type="JDBC" />
			
			<!-- 
				*dataSource : DB를 사용하기 위한 jdbc의 설정
				- connectionPool : 미리 DB접속한 connection객체( connection() )를 가지고있다가 필요할 때 대여
								   다 쓰고 반납하면 다시 재사용할 수 있음
						장점 : DB에서 connection할 때 시간이 가장 오래걸리는데, pool을 사용하면 시간을 단축할 수 있음
				
				- POOLED : pool 사용
				- UNPOOLED : pool 사용안함
			 -->
			<dataSource type="POOLED">
				<property name="driver" value="oracle.jdbc.OracleDriver"/>
				<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
				<property name="username" value="mybatis"/>
				<property name="password" value="mybatis"/>
			</dataSource>
		</environment>
	</environments>
	
	<!-- mappers : 실행할 sql문들을 기록해둔 mapper파일들을 등록하는 영역 -->
	<mappers>
		<mapper resource="/mappers/member-mapper.xml"/>
	</mappers>
</configuration>










